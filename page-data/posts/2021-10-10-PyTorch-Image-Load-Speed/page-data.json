{"componentChunkName":"component---src-templates-post-js","path":"/posts/2021-10-10-PyTorch-Image-Load-Speed/","result":{"data":{"site":{"siteMetadata":{"title":"MJUN Tech Note","author":"Junya Morioka"}},"markdownRemark":{"id":"c6e30599-ec43-5390-ae16-d184550e6b28","html":"<p>こんにちは．今回はPyTorchで画像を読み込んでTensorに変換するまでの速度を，様々なライブラリで比較してみました．</p>\n<h2 id=\"使用するライブラリ\">使用するライブラリ</h2>\n<ul>\n<li>opencv-python: 4.5.3.56</li>\n<li>Pillow(PIL): 8.3.2</li>\n<li>Pillow-SIMD: 7.0.0.post3</li>\n<li>torchvision.io(PIL): 0.10.1</li>\n<li>torchvision.io(accimage): 0.10.1</li>\n<li>scikit-image: 0.18.3</li>\n</ul>\n<p>それぞれのインストール方法は省略する．</p>\n<p>Pillow-SIMDはPillowの高速版であるが，最近は更新されておらず，7.0.0で更新が止まっている．<br>\n<a href=\"https://github.com/pytorch/accimage\">accimage</a>はtorchvisionのバックエンドに指定できるライブラリで，condaでインストールできる．</p>\n<h2 id=\"実験\">実験</h2>\n<p>ソースコードは以下<br>\n<a href=\"https://buildersbox.corp-sansan.com/entry/2020/11/05/110000\">こちら</a>を参考にした，</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> contextlib <span class=\"token keyword\">import</span> contextmanager\n\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">import</span> skimage<span class=\"token punctuation\">.</span>io\n<span class=\"token keyword\">import</span> torchvision\n<span class=\"token keyword\">import</span> torchvision<span class=\"token punctuation\">.</span>transforms<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> TF\n<span class=\"token keyword\">from</span> torchvision<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> read_image\n\n\n<span class=\"token decorator annotation punctuation\">@contextmanager</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    t0 <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">yield</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">] done in </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> t0<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">.03f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> ms\"</span></span><span class=\"token punctuation\">)</span>\n\n\nN_ITERS <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">for</span> FILENAME <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./image.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"./image.png\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> timer<span class=\"token punctuation\">(</span><span class=\"token string\">\"PIL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N_ITERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">)</span>\n            img <span class=\"token operator\">=</span> TF<span class=\"token punctuation\">.</span>to_tensor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> timer<span class=\"token punctuation\">(</span><span class=\"token string\">\"OpenCV\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N_ITERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            img <span class=\"token operator\">=</span> TF<span class=\"token punctuation\">.</span>to_tensor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> timer<span class=\"token punctuation\">(</span><span class=\"token string\">\"default_torchvision\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N_ITERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> read_image<span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> timer<span class=\"token punctuation\">(</span><span class=\"token string\">\"accimage_torchvision\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        torchvision<span class=\"token punctuation\">.</span>set_image_backend<span class=\"token punctuation\">(</span><span class=\"token string\">\"accimage\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N_ITERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> read_image<span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> timer<span class=\"token punctuation\">(</span><span class=\"token string\">\"skimage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N_ITERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> skimage<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span>\n            img <span class=\"token operator\">=</span> TF<span class=\"token punctuation\">.</span>to_tensor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></code></pre></div>\n<p>一応Githubにもソースを公開する．</p>\n<p><a href=\"https://github.com/mjun0812/Pytorch-Image-Load-Speed\">https://github.com/mjun0812/Pytorch-Image-Load-Speed</a></p>\n<p>画像はよく使われるマンドリルの画像を用いている．</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">画像形式</th>\n<th>ライブラリ</th>\n<th align=\"right\">速度(ms)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">jpg</td>\n<td>opencv-python</td>\n<td align=\"right\">673.799</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow(PIL)</td>\n<td align=\"right\">772.203</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow-SIMD</td>\n<td align=\"right\">648.018</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io(PIL)</td>\n<td align=\"right\">301.993</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io(PIL-SIMD)</td>\n<td align=\"right\">278.904</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io(accimage)</td>\n<td align=\"right\">274.502</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image</td>\n<td align=\"right\">794.349</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image(PIL-SIMD)</td>\n<td align=\"right\">545.362</td>\n</tr>\n<tr>\n<td align=\"center\">png</td>\n<td>opencv-python</td>\n<td align=\"right\">1066.164</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow(PIL)</td>\n<td align=\"right\">1752.472</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow-SIMD</td>\n<td align=\"right\">1085.250</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io(PIL)</td>\n<td align=\"right\">877.775</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io(PIL-SIMD)</td>\n<td align=\"right\">867.422</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io(accimage)</td>\n<td align=\"right\">847.297</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image</td>\n<td align=\"right\">1878.370</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image(PIL-SIMD)</td>\n<td align=\"right\">1108.291</td>\n</tr>\n</tbody>\n</table>\n<p>最も早いのは<code class=\"language-text\">torchvision.io.read_image</code>となった．<br>\nPillow-SIMDでの高速化は,scikit-imageにも影響を与えている．内部的に使われているのであろう．<br>\nただ，torchvisionにはPillow-SIMDの効果は見られなかった．</p>\n<p>この際，画像のロード速度もついでに比較．<br>\nTensorに変更しないこともあると思うので．<br>\nTensorが出力として出てくる<code class=\"language-text\">torchvision.io.read_image</code>は，<code class=\"language-text\">numpy()</code>でndarrayに変換するまでを計測する．</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">画像形式</th>\n<th>ライブラリ</th>\n<th align=\"right\">速度(ms)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">jpg</td>\n<td>opencv-python</td>\n<td align=\"right\">457.877</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow(PIL)</td>\n<td align=\"right\">772.203</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow-SIMD</td>\n<td align=\"right\">648.018</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io</td>\n<td align=\"right\">273.161</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image</td>\n<td align=\"right\">794.349</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image(PIL-SIMD)</td>\n<td align=\"right\">545.362</td>\n</tr>\n<tr>\n<td align=\"center\">png</td>\n<td>opencv-python</td>\n<td align=\"right\">962.926</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow(PIL)</td>\n<td align=\"right\">1752.472</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Pillow-SIMD</td>\n<td align=\"right\">1085.250</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>torchvision.io</td>\n<td align=\"right\">795.085</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image</td>\n<td align=\"right\">1878.370</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>scikit-image(PIL-SIMD)</td>\n<td align=\"right\">1108.291</td>\n</tr>\n</tbody>\n</table>\n<p>なんとこちらも<code class=\"language-text\">torchvision.io</code>が一番早い結果となった．</p>\n<h2 id=\"注意\">注意</h2>\n<p>Pillow-SIMDは古いPillowをベースとしているため，以下の警告が出る．</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">UserWarning: Your installed pillow version is &lt; 7.1.0. Several security issues (CVE-2020-11538, CVE-2020-10379, CVE-2020-10994, CVE-2020-10177) have been fixed in pillow 7.1.0 or higher. We recommend to upgrade this library.</code></pre></div>\n<p>セキュリティ上のリスクが有るようなので，使わない方が無難だろう．</p>","tableOfContents":"<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA\">使用するライブラリ</a></li>\n<li><a href=\"#%E5%AE%9F%E9%A8%93\">実験</a></li>\n<li><a href=\"#%E6%B3%A8%E6%84%8F\">注意</a></li>\n</ul>","excerpt":"こんにちは．今回はPyTorchで画像を読み込んでTensorに変換するまでの速度を，様々なライブラリで比較してみました． 使用するライブラリ opencv-python: 4.5.3.56 Pillow(PIL): 8.3.2 Pillow-SIMD: 7.0.0.post…","frontmatter":{"title":"PyTorchで画像を読み込む速度を比較","date":"2021.10.10","update":"2021.10.10","category":"PyTorch","tags":["PyTorch","OpenCV","Pillow","Torchvision"]},"fields":{"slug":"/posts/2021-10-10-PyTorch-Image-Load-Speed/"}}},"pageContext":{"id":"c6e30599-ec43-5390-ae16-d184550e6b28"}},"staticQueryHashes":["1123391092"],"slicesMap":{}}