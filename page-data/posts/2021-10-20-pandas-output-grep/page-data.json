{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/posts/2021-10-20-pandas-output-grep/",
    "result": {"data":{"site":{"siteMetadata":{"title":"MJUN Tech Note","author":"Junya Morioka"}},"mdx":{"id":"ba60fdaa-7f67-5688-b974-13e26b8cca36","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pandasで標準出力したDataframeにgrepする\",\n  \"tags\": [\"pandas\", \"python\"],\n  \"category\": \"Python\",\n  \"date\": \"2021-10-20T00:00:00.000Z\",\n  \"update\": \"2021-10-20T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Python\\u306E\\u30C7\\u30FC\\u30BF\\u5206\\u6790\\u306E\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u306BPandas\\u3068\\u3044\\u3046\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u304C\\u3042\\u308B\\uFF0E\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u500B\\u4EBA\\u7684\\u306B\\u306F2\\u6B21\\u5143\\u914D\\u5217\\u3092\\u304D\\u308C\\u3044\\u306B\\u6A19\\u6E96\\u51FA\\u529B\\u3067\\u304D\\u308B\\u306E\\u3067\\u3088\\u304F\\u4F7F\\u3063\\u3066\\u3044\\u305F\\u308A\\u3059\\u308B(\\u5B8C\\u5168\\u306B\\u90AA\\u9053)\\uFF0E\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Pandas\\u306F\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"print(df)\"), \"\\u3057\\u305F\\u3068\\u304D\\u306B\\uFF0C\\u3054\\u4E01\\u5BE7\\u306B\\u7AEF\\u672B\\u306E\\u6A2A\\u5E45\\u3092\\u8003\\u616E\\u3057\\u3066\\u7701\\u7565\\u3057\\u3066\\u51FA\\u529B\\u3057\\u3066\\u304F\\u308C\\u308B\\u306E\\u3060\\u304C\\uFF0C\\u305D\\u308C\\u3060\\u3068\\n\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python pands.py | grep ABC\"), \"\\u3057\\u305F\\u3068\\u304D\\u306B\\u7701\\u7565\\u90E8\\u5206\\u306B\\u691C\\u7D22\\u8A9E\\u53E5\\u304C\\u3042\\u308B\\u3068\\u691C\\u7D22\\u6F0F\\u308C\\u3057\\u3066\\u3057\\u307E\\u3046\\uFF0E\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u305D\\u3053\\u3067\\uFF0C\\u30C7\\u30FC\\u30BF\\u306E\\u884C\\u306E\\u6A2A\\u5E45\\u3092\\u7121\\u8996\\u3059\\u308B\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u8A2D\\u5B9A\\u3059\\u308B\\u3053\\u3068\\u3067grep\\u3067\\u6307\\u5B9A\\u884C\\u3092\\u691C\\u7D22\\u3067\\u304D\\u308B\\u3088\\u3046\\u306B\\u3059\\u308B\\uFF0E  \"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"python\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-python\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"import\"), \" pandas \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"as\"), \" pd\\n\\npd\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"set_option\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"display.width\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, \"None\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\")))), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"display.width\"), \"\\u306E\\u521D\\u671F\\u5024\\u306F80\\u3067\\u3042\\u308B\\uFF0E\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"None\\u306B\\u3059\\u308B\\u3053\\u3068\\u3067\\u5236\\u9650\\u3092\\u89E3\\u9664\\u3059\\u308B\\uFF0E\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u3053\\u308C\\u3067Pandas\\u306E\\u51FA\\u529B\\u306Bgrep\\u3092\\u304B\\u3051\\u308B\\u3053\\u3068\\u304C\\u53EF\\u80FD\\u306B\\u306A\\u3063\\u305F\\uFF0E\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"excerpt":"Pythonのデータ分析のライブラリにPandasというライブラリがある． 個人的には2次元配列をきれいに標準出力できるのでよく使っていたりする(完全に邪道)． Pandasは print(df…","frontmatter":{"title":"Pandasで標準出力したDataframeにgrepする","date":"2021.10.20","update":"2021.10.20","category":"Python","tags":["pandas","python"]},"fields":{"slug":"/posts/2021-10-20-pandas-output-grep/"}}},"pageContext":{"id":"ba60fdaa-7f67-5688-b974-13e26b8cca36"}},
    "staticQueryHashes": ["1123391092"]}