{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/posts/2021-12-12-tf-1-15-rtx-3000/",
    "result": {"data":{"site":{"siteMetadata":{"title":"MJUN Tech Note","author":"Junya Morioka"}},"mdx":{"id":"cc4ef3bd-fe7a-553b-b587-510643cc44df","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"RTX3000番台でtensorflow-gpu 1.15を使う\",\n  \"tags\": [\"Python\", \"Tensorflow\"],\n  \"category\": \"Tensorflow\",\n  \"date\": \"2021-12-12T00:00:00.000Z\",\n  \"update\": \"2021-12-12T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u3053\\u3093\\u306B\\u3061\\u306F\\uFF0E\\u4ECA\\u56DE\\u306FRTX3090\\u30843080\\u306A\\u3069\\u306EGPU\\u3067Tensorflow\\u306E1.15\\u3092\\u5229\\u7528\\u3059\\u308B\\u65B9\\u6CD5\\u3092\\u30E1\\u30E2\\u3057\\u307E\\u3059\\uFF0E\"), mdx(\"p\", null, \"\\u516C\\u5F0F\\u304C\\u914D\\u5E03\\u3057\\u3066\\u3044\\u308BTensorflow\\u30673000\\u756A\\u53F0\\u306EGPU\\u3092\\u5229\\u7528\\u3059\\u308B\\u306B\\u306F2\\u7CFB\\u306B\\u4E0A\\u3052\\u306A\\u3051\\u308C\\u3070\\u3044\\u3051\\u307E\\u305B\\u3093.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Tensorflow\\u306F1\\u7CFB\\u30682\\u7CFB\\u3067API\\u306E\\u4ED5\\u69D8\\u304C\\u5909\\u66F4\\u3055\\u308C\\u3066\\u3044\\u308B\\u305F\\u3081\\uFF0C1\\u7CFB\\u306E\\u30B3\\u30FC\\u30C9\\u3092\\u52D5\\u304B\\u3059\\u306E\\u306F\\u5927\\u5909\\u3067\\u3059\\uFF0E\"), mdx(\"p\", null, \"\\u305D\\u3053\\u3067\\uFF0C\\u516C\\u5F0F\\u304C\\u914D\\u5E03\\u3057\\u3066\\u3044\\u308B\\u3082\\u306E\\u3067\\u306F\\u306A\\u304F\\uFF0CNvidia\\u304C\\u914D\\u5E03\\u3057\\u3066\\u3044\\u308B\\u3082\\u306E\\u3092\\u4F7F\\u3044\\u307E\\u3059\\uFF0E\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pip \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"install\"), \" nvidia-pyindex\\npip \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"install\"), \" nvidia-tensorflow\"))), mdx(\"p\", null, \"\\u8981\\u4EF6\\u3068\\u3057\\u3066\\uFF0C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ubuntu 20.04 or later\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nvidia Driver r455\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Python 3.8\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pip 19.0 or later\")), mdx(\"p\", null, \"\\u304C\\u6C42\\u3081\\u3089\\u308C\\u307E\\u3059\\uFF0E\"), mdx(\"p\", null, \"\\u3053\\u308C\\u3067Tensorflow==1.15\\u304CRTX 3090\\u3067\\u3082\\u4F7F\\u3048\\u307E\\u3059\\uFF01\"), mdx(\"h3\", {\n    \"id\": \"参考\"\n  }, \"\\u53C2\\u8003\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.nvidia.com/blog/accelerating-tensorflow-on-a100-gpus/\"\n  }, \"https://developer.nvidia.com/blog/accelerating-tensorflow-on-a100-gpus/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://zenn.dev/pinto0309/articles/9e54ee8d15189a\"\n  }, \"https://zenn.dev/pinto0309/articles/9e54ee8d15189a\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/NVIDIA/tensorflow\"\n  }, \"https://github.com/NVIDIA/tensorflow\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"excerpt":"こんにちは．今回はRTX3090や3080などのGPUでTensorflowの1.15を利用する方法をメモします． 公式が配布しているTensorflowで3000番台のGPUを利用するには2系に上げなければいけません. Tensorflowは1系と2系でAPI…","frontmatter":{"title":"RTX3000番台でtensorflow-gpu 1.15を使う","date":"2021.12.12","update":"2021.12.12","category":"Tensorflow","tags":["Python","Tensorflow"]},"fields":{"slug":"/posts/2021-12-12-tf-1-15-rtx-3000/"}}},"pageContext":{"id":"cc4ef3bd-fe7a-553b-b587-510643cc44df"}},
    "staticQueryHashes": []}