{"componentChunkName":"component---src-templates-post-js","path":"/posts/2022-05-28-ubuntu2204-cuda/","result":{"data":{"site":{"siteMetadata":{"title":"MJUN Tech Note","author":"Junya Morioka"}},"markdownRemark":{"id":"894765ca-d61b-5945-bc31-a53aed7dafea","html":"<p>Ubuntu22.04 に CUDA11.7 と cuDNN8，nvidia-docker2 をインストールする手順．<br>\nUbuntu は最小インストールで，サードパーティのパッケージをインストールするで\nインストールしたものを用意．</p>\n<h2 id=\"cuda-117\">CUDA 11.7</h2>\n<p>サードパーティインストールをすると，CUDA が勝手に入ってくるので全部削除する．<br>\n(本当はサードパーティインストールしなければよいが，Wifi ドライバとか入ってこないとめんどいので)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge *nvidia*\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> autopurge\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge nvidia-*\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge nvidia-compute-*\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge libnvidia*\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge linux-objects-nvidia*</code></pre></div>\n<p>NVIDIA 公式から CUDA をインストールする．</p>\n<p><a href=\"https://developer.nvidia.com/cuda-downloads\">https://developer.nvidia.com/cuda-downloads</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin\n<span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600\n<span class=\"token function\">sudo</span> apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub\n<span class=\"token function\">sudo</span> add-apt-repository <span class=\"token string\">\"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/ /\"</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> cuda\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> cuda-drivers</code></pre></div>\n<p>ここで一度再起動する．</p>\n<p>GPU が見えるようになったか確認するために，CUDA へ PATH を通す．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># CUDA</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/usr/local/cuda/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span>/usr/local/cuda/lib64:<span class=\"token variable\">$LD_LIBRARY_PATH</span></code></pre></div>\n<p><code class=\"language-text\">nvidia-smi</code>や<code class=\"language-text\">nvcc -V</code>を試す．</p>\n<h2 id=\"cudnn-をインストールする\">cuDNN をインストールする</h2>\n<p>cuDNN を入れるには NVIDIA への会員登録が必要．<br>\nダウンロードは以下から行う．<br>\nLocal Installer Ubuntu2*.04 x86_64 を入れる．22.04 では 20.04 を入れても大丈夫だった．</p>\n<p><a href=\"https://developer.nvidia.com/cudnn\">https://developer.nvidia.com/cudnn</a></p>\n<p><a href=\"https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html\">https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html</a></p>\n<p>上記のインストールガイドの通り，インストールする．<br>\n今回は dpkg を選択</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-i</span> cudnn-local-repo-<span class=\"token variable\">${OS}</span>-8.x.x.x_1.0-1_amd64.deb\n<span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> /var/cudnn-local-repo-*/7fa2af80.pub\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libcudnn8\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libcudnn8-dev</code></pre></div>\n<h2 id=\"docker-を入れる\">Docker を入れる</h2>\n<p>Docker は公式サイトの手順通り入れる．<br>\nGUI 版の Docker-Desktop for Linux を推されるが，CLI 運用なら Docker Engine だけで十分．<br>\nDesktop は商用とか人数とかで制限があるので注意．</p>\n<p><a href=\"https://docs.docker.com/engine/install/ubuntu/\">https://docs.docker.com/engine/install/ubuntu/</a></p>\n<p>docker コマンドを sudo なしで打てるようにするために，ユーザーを Docker グループに追加する．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">groupadd</span> <span class=\"token function\">docker</span>\n<span class=\"token function\">sudo</span> gpasswd <span class=\"token parameter variable\">-a</span> <span class=\"token environment constant\">$USER</span> <span class=\"token function\">docker</span>\n<span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">docker</span></code></pre></div>\n<p>このあとログアウトして再ログインする．</p>\n<h2 id=\"nvidia-docker-2-を入れる\">NVIDIA-Docker-2 を入れる</h2>\n<p><a href=\"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#setting-up-nvidia-container-toolkit\">https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#setting-up-nvidia-container-toolkit</a></p>\n<p>上記のサイトに従って入れる．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">distribution</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">.</span> /etc/os-release<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">echo</span> $ID$VERSION_ID<span class=\"token variable\">)</span></span> <span class=\"token punctuation\">\\</span>\n      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://nvidia.github.io/libnvidia-container/gpgkey <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> gpg <span class=\"token parameter variable\">--dearmor</span> <span class=\"token parameter variable\">-o</span> /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg <span class=\"token punctuation\">\\</span>\n      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-L</span> https://nvidia.github.io/libnvidia-container/<span class=\"token variable\">$distribution</span>/libnvidia-container.list <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n            <span class=\"token function\">sed</span> <span class=\"token string\">'s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n            <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/nvidia-container-toolkit.list\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> nvidia-docker2\n<span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">docker</span></code></pre></div>\n<p>コンテナから GPU が見えるかテストする．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--gpus</span> all nvidia/cuda:11.0.3-base-ubuntu20.04 nvidia-smi</code></pre></div>\n<h2 id=\"注意\">注意</h2>\n<p>CUDA に PATH を通していない状態で，nvcc を打つと，<code class=\"language-text\">cuda-toolkit</code>を入れろと言われるが入れてはいけない．\n入れると，最新の CUDA である 11.7 が削除されて，インストール直後に入っていた 11.5 にフォールバックさせられてしまう．</p>","tableOfContents":"<ul>\n<li><a href=\"#cuda-117\">CUDA 11.7</a></li>\n<li><a href=\"#cudnn-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B\">cuDNN をインストールする</a></li>\n<li><a href=\"#docker-%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B\">Docker を入れる</a></li>\n<li><a href=\"#nvidia-docker-2-%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B\">NVIDIA-Docker-2 を入れる</a></li>\n<li><a href=\"#%E6%B3%A8%E6%84%8F\">注意</a></li>\n</ul>","excerpt":"Ubuntu22.04 に CUDA11.7 と cuDNN8，nvidia-docker2 をインストールする手順． Ubuntu は最小インストールで，サードパーティのパッケージをインストールするで\nインストールしたものを用意． CUDA 11.…","frontmatter":{"title":"Ubuntu22.04にCUDA, cuDNN，Docker，NVIDIA-Docker2を入れる","date":"2022.05.28","update":"2022.05.28","category":"Server","tags":["Server","Ubuntu","Linux","NVIDIA","CUDA"]},"fields":{"slug":"/posts/2022-05-28-ubuntu2204-cuda/"}}},"pageContext":{"id":"894765ca-d61b-5945-bc31-a53aed7dafea"}},"staticQueryHashes":["1123391092"],"slicesMap":{}}