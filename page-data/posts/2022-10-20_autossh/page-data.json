{"componentChunkName":"component---src-templates-post-js","path":"/posts/2022-10-20_autossh/","result":{"data":{"site":{"siteMetadata":{"title":"MJUN Tech Note","author":"Junya Morioka"}},"markdownRemark":{"id":"50c18114-426b-58d2-96df-5c8631d5d1bf","html":"<p>こんにちは．今回はssh接続を極力維持してくれるAutosshと\nLinux, Unixのサービス管理を行うsystemd, launchdを組み合わせて，常にssh Portforwardを行う環境を作成します．</p>\n<p>この設定は特定のネットワーク下で閲覧・アクセスできるサイト等を閲覧する際に，\n毎回sshやVPN接続をする必要がなくなります．</p>\n<h3 id=\"autosshとは\">autosshとは</h3>\n<p>autosshはssh接続を極力維持してくれるCLIコマンドです．<br>\nインストールは以下の方法で行います．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Ubuntu</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> autossh\n<span class=\"token comment\"># macOS</span>\nbrew <span class=\"token function\">install</span> autossh</code></pre></div>\n<p>コマンドの使い方はsshとほとんど変わりません．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">autossh <span class=\"token parameter variable\">-M</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-L</span> <span class=\"token number\">12022</span>:remote:22</code></pre></div>\n<p><code class=\"language-text\">-M</code>オプションはモニターポートです．特に何もなければ0で無効にしても良いと思います．詳しくは<code class=\"language-text\">man autossh</code>に記述されています．</p>\n<p><code class=\"language-text\">-f</code>オプションはautosshをバックグラウンドで実行します．\n注意として，パスワードの要求などの入力を行うことができないので，\nこのオプションを使用する際はリモート先にパスワードなしでログインできる必要があります．</p>\n<h2 id=\"autosshとsystemd-launchdの組み合わせ\">autosshとsystemd, launchdの組み合わせ</h2>\n<p>systemdはUbuntu，launchdはmacOSのサービス管理ツールです．<br>\nsystemd, launchdにautosshと登録することで，</p>\n<ul>\n<li>sshが落ちた場合はautosshが再接続</li>\n<li>autosshが落ちた場合はsystemd, launchdが再接続</li>\n<li>システム起動時はsystemd, launchdが接続</li>\n</ul>\n<p>というように，より強固にssh接続を維持することができます．\n今回は，ssh configに書いた設定を元にautosshする方法でポートフォワードしていきます．</p>\n<h2 id=\"事前準備\">事前準備</h2>\n<p>まずは事前準備として，リモート先にパスワードなしでssh接続できるようにしておきます．<br>\nsshの認証を公開鍵認証に設定しておくと良いでしょう．</p>\n<p>ここで注意でするのは，Ubuntuで秘密鍵にパスフレーズを設定した場合です．<br>\nmacOSでは<code class=\"language-text\">~/.ssh/config</code>に<code class=\"language-text\">UseKeychain</code>を設定することで，\nssh使用時にパスフレーズがKeychainに保存され，\n自動的にssh-agentへ読み込まれるのですが，\nUbuntuではKeychainがないため自分で行う必要があります．</p>\n<p>先ほど述べたように，autosshではssh時の入力を扱うことができないため，\nUbuntuでautosshする際はパスフレーズなしの秘密鍵を用意しておく必要があります．\nmacではKeychainが良しなしにやってくれるので必要ありません．\n秘密鍵のパスワードは以下のコマンドで設定・解除できます．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen <span class=\"token parameter variable\">-f</span> ~/.ssh/id_rsa <span class=\"token parameter variable\">-p</span></code></pre></div>\n<p>上記を解決したら，初回の通常のssh接続を行います．\n初回ssh時にはfingerprintの確認が行われ，応答が必要なため，autosshする際に発生しないようにするためです．\n今回はssh configに書いた設定でsshしていきます．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Host remote\n  HostName hoge\n  User hoge\n  LocalForward <span class=\"token number\">6006</span> localhost:6006</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> remote\nThe authenticity of <span class=\"token function\">host</span> <span class=\"token string\">'hoge (::1)'</span> can't be established.\nED25519 key fingerprint is SHA256:hogehogehogehoge.\nThis key is not known by any other names\nAre you sure you want to <span class=\"token builtin class-name\">continue</span> connecting <span class=\"token punctuation\">(</span>yes/no/<span class=\"token punctuation\">[</span>fingerprint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>? <span class=\"token function\">yes</span></code></pre></div>\n<p>yes以外のパスワード等の入力なしで初回ログインが済んだら成功です．次に進みましょう．</p>\n<h2 id=\"autosshをサービス化する\">autosshをサービス化する</h2>\n<p>次に，autosshをサービス化するためにコンフィグを書いていきます．</p>\n<h3 id=\"mac-launchdの場合\">mac: Launchdの場合</h3>\n<p>まずはautosshのフルパスの場所を確認しておきましょう．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">which</span> autossh\n/opt/homebrew/bin/autossh</code></pre></div>\n<p>今回は<code class=\"language-text\">/opt/homebrew/bin</code>にあるようです．Intel macだと<code class=\"language-text\">/usr/local/bin</code>にあったりします．\nLaunchdの設定ファイルの場所はいくつかありますが，今回はユーザーがログインした際に実行するようにします．\nこうすることで，先ほど記入した<code class=\"language-text\">~/.ssh/config</code>の内容が使用できるようになります．\n<code class=\"language-text\">~/Library/LaunchAgents/remote.autossh.plist</code>に以下の内容のファイルを置きます．</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">plist</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"token string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plist</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dict</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>KeepAlive<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>true</span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>RunAtLoad<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>true</span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>EnvironmentVariables<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dict</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>AUTOSSH_GATETIME<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>integer</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>integer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dict</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>UserName<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>[username]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>Label<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>remote.autossh<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>ProgramArguments<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>array</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>/opt/homebrew/bin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>-M<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>-N<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>remtote<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>array</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dict</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plist</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>ファイルが書き込めたらlaunchdに登録していきます．この際，plistのパスは絶対パスで書いてください．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">launchctl load /Users/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>/Library/LaunchAgents/remote.autossh.plist</code></pre></div>\n<p>今回はplistに<code class=\"language-text\">RunAtLoad</code>を追加しているので，loadした時点で実行も行われているはずです．確認してみます．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ launchctl list <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> remote.autossh\n<span class=\"token number\">57892</span>\t<span class=\"token number\">0</span>\tremote.autossh</code></pre></div>\n<p>左からPIDとexit code，Labelが表示されます．今回はPIDがあり，exitcode=0なので成功です．\nサービスから削除を行う場合はunloadを行います．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">launchctl unload /Users/<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>/Library/LaunchAgents/remote.autossh.plist</code></pre></div>\n<p>ssh configを変更した場合は<code class=\"language-text\">stop, start</code>で再起動を行います．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">launchctl stop iplab.autossh\nlaunchctl start iplab.autossh</code></pre></div>\n<h3 id=\"ubuntu-systemdの場合\">Ubuntu: Systemdの場合</h3>\n<p>Ubuntuではsystemdに設定を行なっていきます．\nRedHat系のCentOSやAmazonLinux等でもsystemdは同じなので，\n少し変えれば同じように設定できると思います．(未確認)</p>\n<p><code class=\"language-text\">/etc/systemd/system/remote.autossh.service</code>に設定を書いていきます．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>keep <span class=\"token function\">ssh</span>\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network-online.target ssh.service\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Type</span><span class=\"token operator\">=</span>simple\n<span class=\"token assign-left variable\">RestartSec</span><span class=\"token operator\">=</span><span class=\"token number\">3</span>\n<span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always\n<span class=\"token assign-left variable\">TimeoutStopSec</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span><span class=\"token string\">\"AUTOSSH_GATETIME=0\"</span>\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/bin/autossh <span class=\"token parameter variable\">-M</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-N</span> remote\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</code></pre></div>\n<p>最後にサービスを起動して，正常に動いているかstatusを確認し，常時起動に設定しておきます．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl start remote.autossh.service\n<span class=\"token function\">sudo</span> systemctl status remote.autossh.service\n\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> remote.autossh.service</code></pre></div>\n<p>以上で完了です．お疲れ様でした．</p>","tableOfContents":"<ul>\n<li><a href=\"#autossh%E3%81%A8systemd-launchd%E3%81%AE%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B\">autosshとsystemd, launchdの組み合わせ</a></li>\n<li><a href=\"#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\">事前準備</a></li>\n<li><a href=\"#autossh%E3%82%92%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E5%8C%96%E3%81%99%E3%82%8B\">autosshをサービス化する</a></li>\n</ul>","excerpt":"こんにちは．今回はssh接続を極力維持してくれるAutosshと\nLinux, Unixのサービス管理を行うsystemd, launchdを組み合わせて，常にssh Portforward…","frontmatter":{"title":"mac, Ubuntuでautosshとsystemd, launchdで常にPortforwardする","date":"2022.10.20","update":"2022.10.20","category":"Linux","tags":["Linux","macOS","Ubuntu"]},"fields":{"slug":"/posts/2022-10-20_autossh/"}}},"pageContext":{"id":"50c18114-426b-58d2-96df-5c8631d5d1bf"}},"staticQueryHashes":["1123391092"],"slicesMap":{}}