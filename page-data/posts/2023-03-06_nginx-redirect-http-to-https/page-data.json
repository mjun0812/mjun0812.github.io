{"componentChunkName":"component---src-templates-post-js","path":"/posts/2023-03-06_nginx-redirect-http-to-https/","result":{"data":{"site":{"siteMetadata":{"title":"MJUN Tech Note","author":"Junya Morioka"}},"markdownRemark":{"id":"ff9de958-c280-5a5e-8031-2c0b71a160fa","html":"<p>Webサーバを立てる時に使用するNginxで，\n任意のポートにきたhttpリクエストをhttpsにリダイレクトする方法のメモ．</p>\n<p>Nginxで，ポート80を443にリダイレクトして\n強制的にhttps化する方法はよく書かれているが，\nポート8080や8065に立てたWebアプリへのhttp通信をhttpsにする方法は\n書かれていなかったのでメモ．</p>\n<p>例えば，Nginxをリバースプロキシとして使っていて，\nexemple.com:8065のアクセスをexample.com:8060に\n飛ばしていた時の例．\nexample.comのSSL証明書はcertbotで取得しているとする．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">server <span class=\"token punctuation\">{</span>\n  server_name example.com:8065$<span class=\"token punctuation\">;</span>\n  listen <span class=\"token number\">8065</span> ssl<span class=\"token punctuation\">;</span>\n  listen <span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:8065 ssl<span class=\"token punctuation\">;</span>\n\n  ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem<span class=\"token punctuation\">;</span> <span class=\"token comment\"># managed by Certbot</span>\n  ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem<span class=\"token punctuation\">;</span> <span class=\"token comment\"># managed by Certbot</span>\n  include /etc/letsencrypt/options-ssl-nginx.conf<span class=\"token punctuation\">;</span> <span class=\"token comment\"># managed by Certbot</span>\n  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem<span class=\"token punctuation\">;</span> <span class=\"token comment\"># managed by Certbot</span>\n\n  error_page <span class=\"token number\">497</span> @force_https<span class=\"token punctuation\">;</span>\n  location @force_https <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin class-name\">return</span> <span class=\"token number\">301</span> <span class=\"token string\">'https://$host:$server_port$request_uri'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  location / <span class=\"token punctuation\">{</span>\n    proxy_pass http://localhost:8060<span class=\"token punctuation\">;</span>\n    proxy_set_header X-Forwarded-Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ポイントはここ．</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">error_page <span class=\"token number\">497</span> @force_https<span class=\"token punctuation\">;</span>\nlocation @force_https <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">return</span> <span class=\"token number\">301</span> <span class=\"token string\">'https://$host:$server_port$request_uri'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>httpsでListenしているポートにhttpでリクエストを送ると，<code class=\"language-text\">The plain HTTP request was sent to HTTPS port</code>\nというようなエラーメッセージが帰ってくる．\nこの時のエラーコードはNginx専有の497が帰ってきている．<br>\nこれを利用して，497エラーの時はhttpsに飛ばすようにしてあげると，\n任意のポートへのhttps通信を強制することが可能となる．</p>","tableOfContents":"","excerpt":"Webサーバを立てる時に使用するNginxで，\n任意のポートにきたhttpリクエストをhttpsにリダイレクトする方法のメモ． Nginxで，ポート80を443にリダイレクトして\n強制的にhttps化する方法はよく書かれているが，\nポート8080や8065に立てたWeb…","frontmatter":{"title":"Nginxで任意のポートのhttp通信をhttpsにリダイレクトする","date":"2023.03.06","update":"2023.03.06","category":"Server","tags":["Linux","Server"]},"fields":{"slug":"/posts/2023-03-06_nginx-redirect-http-to-https/"}}},"pageContext":{"id":"ff9de958-c280-5a5e-8031-2c0b71a160fa"}},"staticQueryHashes":["1123391092"],"slicesMap":{}}