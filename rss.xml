<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[MJUN Tech Note RSS Feed]]></title><description><![CDATA[とある情報系の院生の技術ノートです]]></description><link>https://note.mjunya.com</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 02 Sep 2021 12:04:29 GMT</lastBuildDate><item><title><![CDATA[SSHのOption, Configまわりの設定]]></title><description><![CDATA[まずは基本系 デフォルトではポート22に接続される。usernameは省略できる。省略した場合は現在のPCのusernameで接続される。 ~/.ssh/config Unix, Linuxではuserのホームディレクトリの .ssh/ 以下に秘密鍵やconfig…]]></description><link>https://note.mjunya.com/posts/2021-07-04-ssh-config/</link><guid isPermaLink="false">https://note.mjunya.com/posts/2021-07-04-ssh-config/</guid><pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;まずは基本系&quot;&gt;まずは基本系&lt;/h2&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;ssh&lt;/span&gt; username@&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;hostname or ip&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;デフォルトではポート22に接続される。usernameは省略できる。省略した場合は現在のPCのusernameで接続される。&lt;/p&gt;&lt;h2 id=&quot;sshconfig&quot;&gt;~/.ssh/config&lt;/h2&gt;&lt;p&gt;Unix, Linuxではuserのホームディレクトリの&lt;code class=&quot;language-text&quot;&gt;.ssh/&lt;/code&gt;以下に秘密鍵やconfigを保存する。
.sshディレクトリは700、.ssh以下のファイルには600の権限を付与する。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell-session&quot;&gt;&lt;pre class=&quot;language-shell-session&quot;&gt;&lt;code class=&quot;language-shell-session&quot;&gt;&lt;span class=&quot;token output&quot;&gt;~/.ssh/
├── authorized_keys
├── config
├── id_rsa
├── id_rsa.pub
├── known_hosts
├── known_hosts-e&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ssh接続を楽にするためにconfigファイルに予め接続設定を書いておく。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell-session&quot;&gt;&lt;pre class=&quot;language-shell-session&quot;&gt;&lt;code class=&quot;language-shell-session&quot;&gt;&lt;span class=&quot;token output&quot;&gt;Host hoge
  HostName 192.168.0.0
  User hoge
  Port 22
  IdentifyFile ~/.ssh/id_rsa&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上記の設定を&lt;code class=&quot;language-text&quot;&gt;~/.ssh/config&lt;/code&gt;に書いておくと&lt;code class=&quot;language-text&quot;&gt;ssh hoge&lt;/code&gt;のみで接続することが可能になる。&lt;/p&gt;&lt;h2 id=&quot;多段ssh&quot;&gt;多段ssh&lt;/h2&gt;&lt;p&gt;セキュリティ上の理由で。接続したい端末に直接接続出来ない場合がある。
例えば、接続したい端末へローカルネットワークでしか接続できず、プロキシーサーバ(接続したい端末と同じネットワーク内にあり、外からアクセスできる。)を介して接続する場合が考えられる。
この場合、Client -&amp;gt; Proxy -&amp;gt; Targetというようにssh接続を重ねて接続しなければならない。これをsshコマンド1行またはssh configで行う方法について説明する。&lt;/p&gt;&lt;p&gt;まずはsshコマンド&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;ssh&lt;/span&gt; -o &lt;span class=&quot;token assign-left variable&quot;&gt;ProxyCommand&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;#x27;ssh -W %h:%p Proxy&amp;#x27;&lt;/span&gt; Target&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;-o&lt;/code&gt;はssh の設定を指定できるオプションで、ssh configよりも優先される。&lt;/p&gt;&lt;p&gt;続いてssh configでの設定。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell-session&quot;&gt;&lt;pre class=&quot;language-shell-session&quot;&gt;&lt;code class=&quot;language-shell-session&quot;&gt;&lt;span class=&quot;token output&quot;&gt;Host proxy
    User hoge

Host target
    User fuga
    ProxyCommand  ssh -W %h:%p proxy&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上記の設定をした上で&lt;code class=&quot;language-text&quot;&gt;ssh target&lt;/code&gt;をすれば踏み台の先のサーバに接続できる。&lt;/p&gt;&lt;h2 id=&quot;sshコマンドのオプションとssh-configの対応&quot;&gt;sshコマンドのオプションとssh configの対応&lt;/h2&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;command&lt;/th&gt;&lt;th&gt;config&lt;/th&gt;&lt;th&gt;説明&lt;/th&gt;&lt;th&gt;例&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;-p&lt;/td&gt;&lt;td&gt;Port&lt;/td&gt;&lt;td&gt;接続先のPortの指定&lt;/td&gt;&lt;td&gt;ssh -p 22&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-i&lt;/td&gt;&lt;td&gt;IdentifyFile&lt;/td&gt;&lt;td&gt;接続に使用する秘密鍵のPath&lt;/td&gt;&lt;td&gt;ssh -i ~/.ssh/hoge_rsa&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-X&lt;/td&gt;&lt;td&gt;ForwardX11&lt;/td&gt;&lt;td&gt;Xwindowを転送するかどうか。&lt;/td&gt;&lt;td&gt;ForwardX11 yes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-Y&lt;/td&gt;&lt;td&gt;ForwardX11Trusted&lt;/td&gt;&lt;td&gt;信頼されたXwindowの転送。macOSでXquartzを使うときはこれ。&lt;/td&gt;&lt;td&gt;ForwardX11Trusted yes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-L&lt;/td&gt;&lt;td&gt;LocalForward&lt;/td&gt;&lt;td&gt;クライアントのポートをリモートのネットワーク内のPCに飛ばす&lt;/td&gt;&lt;td&gt;ssh -L 8080:remote_pc:80&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-o StrictHostKeyChecking=&lt;/td&gt;&lt;td&gt;StrictHostKeyChecking&lt;/td&gt;&lt;td&gt;known_hostの扱いを決める。&lt;/td&gt;&lt;td&gt;yes(接続しない)、no(接続する)、ask(default 確認させる)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;macosに使える設定&quot;&gt;macOSに使える設定&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;AddKeysToAgent&lt;/li&gt;&lt;li&gt;UseKeychain&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ssh agentに鍵を登録する。再起動時にも有効。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Shell Scriptでオプション解析をする getopts]]></title><description><![CDATA[こんにちは。今回もShellScript絡みです。 本稿ではShell Scriptでオプション引数を扱うgetoptについてメモします。 Pythonだとargparseですね。 getoptとgetopts Shell Scriptでオプション引数を扱うにはgetopt…]]></description><link>https://note.mjunya.com/posts/2021-06-02-getopt-in-shellscript/</link><guid isPermaLink="false">https://note.mjunya.com/posts/2021-06-02-getopt-in-shellscript/</guid><pubDate>Wed, 02 Jun 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。今回もShellScript絡みです。&lt;br/&gt;
本稿ではShell Scriptでオプション引数を扱うgetoptについてメモします。&lt;br/&gt;
Pythonだとargparseですね。&lt;/p&gt;&lt;h2 id=&quot;getoptとgetopts&quot;&gt;getoptとgetopts&lt;/h2&gt;&lt;p&gt;Shell Scriptでオプション引数を扱うにはgetoptとgetoptsの2つの方法がある。&lt;br/&gt;
getoptは外部コマンドでgetoptsはbash組み込みのコマンドです。&lt;br/&gt;
getoptはBSD(macOS)とGNU(Linux)で挙動が異なるため、汎用性を考えたときにはgetoptsを使ったほうが良い。[&lt;a href=&quot;https://takuya-1st.hatenablog.jp/entry/2015/12/24/234238&quot;&gt;1&lt;/a&gt;]&lt;/p&gt;&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;&lt;p&gt;というわけで本稿ではgetoptsに絞ってオプション引数の扱い方を見ていきます。&lt;br/&gt;
早速ですが使い方は以下のようになります。[&lt;a href=&quot;https://www.atmarkit.co.jp/ait/articles/2002/13/news025.html&quot;&gt;2&lt;/a&gt;]&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;getopts&lt;/span&gt; abc OPT
&lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$OPT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
     a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;use -a option&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
     b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;use -b option&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
     c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;use -c option&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上記のスクリプトの実行結果は以下です。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;./a.sh

./a.sh -a
&lt;span class=&quot;token comment&quot;&gt;# use -a option&lt;/span&gt;

./a.sh -b
&lt;span class=&quot;token comment&quot;&gt;# use -b option&lt;/span&gt;

./a.sh -d
&lt;span class=&quot;token comment&quot;&gt;#./a.sh: illegal option -- d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上記のスクリプトですが、エラーメッセージを表示させない場合は&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;- &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;getopts&lt;/span&gt; abc OPT

+ &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;getopts&lt;/span&gt; :abc OPT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;に変更すればErrorメッセージが表示されません。&lt;/p&gt;&lt;p&gt;オプションに追加して引数を受け入れる場合は以下のように、オプション文字の後に&lt;code class=&quot;language-text&quot;&gt;:&lt;/code&gt;を追加します。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;getopts&lt;/span&gt; a: OPT
&lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$OPT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
     a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;use -a option and input &lt;span class=&quot;token variable&quot;&gt;$OPTARG&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを実行すると、&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;./a.sh -a aaa
&lt;span class=&quot;token comment&quot;&gt;# use -a option and input aaa&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となります。&lt;/p&gt;&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;&lt;h3 id=&quot;文献&quot;&gt;文献&lt;/h3&gt;&lt;p&gt;[1]: &lt;a href=&quot;https://takuya-1st.hatenablog.jp/entry/2015/12/24/234238&quot;&gt;https://takuya-1st.hatenablog.jp/entry/2015/12/24/234238&lt;/a&gt;  &lt;/p&gt;&lt;p&gt;[2]: &lt;a href=&quot;https://www.atmarkit.co.jp/ait/articles/2002/13/news025.html&quot;&gt;https://www.atmarkit.co.jp/ait/articles/2002/13/news025.html&lt;/a&gt;  &lt;/p&gt;</content:encoded></item><item><title><![CDATA[Shell Scriptで使う条件分岐 test]]></title><description><![CDATA[本稿ではShell Scriptで条件分岐に用いられる、testコマンドについて書く。
どのような条件分岐が可能であるかを、testコマンドのオプションをベースに列挙する。
シェルスクリプトでの利用を想定しているため、 [ ] での記述を行う。 条件 内容 -a file…]]></description><link>https://note.mjunya.com/posts/2021-05-24-test-in-shellscript/</link><guid isPermaLink="false">https://note.mjunya.com/posts/2021-05-24-test-in-shellscript/</guid><pubDate>Mon, 24 May 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;本稿ではShell Scriptで条件分岐に用いられる、testコマンドについて書く。
どのような条件分岐が可能であるかを、testコマンドのオプションをベースに列挙する。
シェルスクリプトでの利用を想定しているため、&lt;code class=&quot;language-text&quot;&gt;[ ]&lt;/code&gt;での記述を行う。&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;条件&lt;/th&gt;&lt;th&gt;内容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;-a file&lt;/td&gt;&lt;td&gt;ファイルが存在すればtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-d file&lt;/td&gt;&lt;td&gt;ファイルがディレクトリならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-e file&lt;/td&gt;&lt;td&gt;ファイルが存在すればtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-f file&lt;/td&gt;&lt;td&gt;ファイルが通常ファイルならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-h file&lt;/td&gt;&lt;td&gt;ファイルがシンボリックリンクならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-r file&lt;/td&gt;&lt;td&gt;ファイルが読み込み可能ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-s file&lt;/td&gt;&lt;td&gt;ファイルサイズが0より大きければtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-w file&lt;/td&gt;&lt;td&gt;ファイルが書き込み可能ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-x file&lt;/td&gt;&lt;td&gt;ファイルが実行可能ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -nt b&lt;/td&gt;&lt;td&gt;aがbより更新日時が新しければtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -ot b&lt;/td&gt;&lt;td&gt;aがbより更新日時が古ければtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-z str&lt;/td&gt;&lt;td&gt;strが空文字ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-n str&lt;/td&gt;&lt;td&gt;strが空文字でないならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;str1 = str2&lt;/td&gt;&lt;td&gt;str1,str2が同じならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;str1 == str2&lt;/td&gt;&lt;td&gt;str1,str2が同じならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;str1 != str2&lt;/td&gt;&lt;td&gt;str1,str2が異なるならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;str1 &amp;lt; str2&lt;/td&gt;&lt;td&gt;str1がstr2よりも辞書順で前ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;str1 &amp;gt; str2&lt;/td&gt;&lt;td&gt;str1がstr2よりも辞書順で後ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -eq b&lt;/td&gt;&lt;td&gt;a,bの数字が等しければtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -ne b&lt;/td&gt;&lt;td&gt;a,bの数字が等しくなければtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -lt b&lt;/td&gt;&lt;td&gt;aがb以下ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -le b&lt;/td&gt;&lt;td&gt;aがb未満ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -gt b&lt;/td&gt;&lt;td&gt;aがbより大きければtrue&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a -ge b&lt;/td&gt;&lt;td&gt;aがb以上ならtrue&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;&lt;h3 id=&quot;書籍&quot;&gt;書籍&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://amzn.to/3vkzkgM&quot;&gt;[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB+DB PRESS plus)&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Shell Script]]></title><description><![CDATA[本稿ではshellscriptについて基本的なことを書く。 Shell Scriptの1行目 この一行目はシバン(shebang) [ 1 ] という。 #![インタプリタのパス] [インタプリタの引数] で指定する。 if文の書き方 then, fi…]]></description><link>https://note.mjunya.com/posts/2021-05-24-shell-script/</link><guid isPermaLink="false">https://note.mjunya.com/posts/2021-05-24-shell-script/</guid><pubDate>Mon, 24 May 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;本稿ではshellscriptについて基本的なことを書く。&lt;/p&gt;&lt;h2 id=&quot;shell-scriptの1行目&quot;&gt;Shell Scriptの1行目&lt;/h2&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#!/bin/sh&lt;/span&gt;

pythonは
&lt;span class=&quot;token comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この一行目はシバン(shebang) [&lt;a href=&quot;https://qiita.com/nafuka/items/c97bfd2a4ca26e70e722&quot;&gt;1&lt;/a&gt;] という。&lt;code class=&quot;language-text&quot;&gt;#![インタプリタのパス] [インタプリタの引数]&lt;/code&gt;で指定する。&lt;/p&gt;&lt;h2 id=&quot;if文の書き方&quot;&gt;if文の書き方&lt;/h2&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;fileが存在します&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;fileが存在します&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;ファイルが存在します&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then, fiの前には終端記号のコロン(;)か改行が必要。&lt;/p&gt;&lt;h2 id=&quot;パイプ---リスト--&quot;&gt;パイプ( | ), リスト( ; )&lt;/h2&gt;&lt;p&gt;パイプラインは複数のコマンドをパイプ(|)でつなげたもの。コマンドの標準出力を別のコマンドの標準出力に接続させる。
リストは1つ以上のパイプラインを、改行・;・&amp;amp;・&amp;amp;&amp;amp;・||で区切って並べたもの。
&amp;amp;の前はバックグラウンドで動作する。&lt;/p&gt;&lt;h2 id=&quot;-と-&quot;&gt;&amp;amp;&amp;amp; と ||&lt;/h2&gt;&lt;p&gt;&amp;amp;&amp;amp;はAND処理、||はOR処理であるが、Shellscript(C言語)のシステム上、左から順にコマンドが実行される。&lt;br/&gt;
&amp;amp;&amp;amp;の場合は左のコマンドが偽であった場合は右のコマンドは実行されない。&lt;br/&gt;
||の場合は左のコマンドが真であった場合は右のコマンドが実行されない。&lt;br/&gt;
この挙動を利用して、簡単な条件分岐が行える。
&amp;amp;&amp;amp;では左のコマンドが真のときのみ右のコマンドを行う。||では左のコマンドが偽のときに右のコマンドを行う。
といったように使用できる。&lt;/p&gt;&lt;h2 id=&quot;if文&quot;&gt;if文&lt;/h2&gt;&lt;p&gt;基本形は以下の通り。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;i=3&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;i=4&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;i!=3,4&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;testコマンド（上記だと[ ]で書かれている）を用いない場合は以下の通り&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cmp&lt;/span&gt; -s file1 file2&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# -sオプションでメッセージなし&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;file1==file2&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;file1!=file2&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;#または&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;cmp&lt;/span&gt; -s file1 file2
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$?&lt;/span&gt; -eq &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;file1==file2&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2つ目の書き方は、if文の記法をtest([])に揃えるためのもの。&lt;code class=&quot;language-text&quot;&gt;$?&lt;/code&gt;で実行ステータスを確認できるため、それを利用している。&lt;/p&gt;&lt;p&gt;否定条件も使える。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
 &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;i!=3&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ifと[の間にはスペースが必要。&lt;/p&gt;&lt;h2 id=&quot;case文&quot;&gt;case文&lt;/h2&gt;&lt;p&gt;基本形は以下の通り。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;uname&lt;/span&gt; -s&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
  Linux&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;FreeBSD&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;this OS is Linux or FreeBSD&amp;#x27;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  *&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;other OS&amp;#x27;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;esac&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;if文で毎回コマンド実行するよりはこっちのほうが簡潔に書けたりする。&lt;/p&gt;&lt;h2 id=&quot;for文&quot;&gt;for文&lt;/h2&gt;&lt;p&gt;基本形は以下の通り。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token for-or-select variable&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; memo.txt prog.txt fig1.png
&lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; -p &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$file&lt;/span&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$file&lt;/span&gt;&amp;quot;&lt;/span&gt;.bak
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;

memo.txt.bak
prog.txt.bak
fig1.png.bak&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;for file in *&lt;/code&gt;のようにすると、カレントディレクトリの全てのファイルが引数fileに代入される。
&lt;code class=&quot;language-text&quot;&gt;for file in `&amp;lt; filelist`&lt;/code&gt;のようにするとファイルから入力を行える。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;# filelist
memo.txt
prog.txt
fig1.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;他の言語と同じように&lt;code class=&quot;language-text&quot;&gt;continue, break&lt;/code&gt;が使える。&lt;/p&gt;&lt;p&gt;算術式を用いる場合は以下の通り。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;((&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;))&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;((&lt;/span&gt;sum &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;while文&quot;&gt;while文&lt;/h2&gt;&lt;p&gt;基本の文は以下の通り。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;&amp;quot;&lt;/span&gt; -le &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;token assign-left variable&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$sum&lt;/span&gt;&amp;quot;&lt;/span&gt; + &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token assign-left variable&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;&amp;quot;&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bashの場合は&lt;code class=&quot;language-text&quot;&gt;`expr &amp;quot;$i&amp;quot; + 1`&lt;/code&gt;の代わりに&lt;code class=&quot;language-text&quot;&gt;((i++))&lt;/code&gt;が使える。&lt;/p&gt;&lt;p&gt;無限ループにする場合は&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のようにセミコロン(:)を用いる。&lt;/p&gt;&lt;h2 id=&quot;select文&quot;&gt;select文&lt;/h2&gt;&lt;p&gt;選択メニューを表示して、応答を受け付ける事ができる。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;PS3&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;#x27;コマンド?&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;token for-or-select variable&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; up down left right quit
&lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$cmd&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
    up&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;up&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    down&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;down&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    left&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;left&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    right&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;right&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    quit&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    *&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$REPLAY&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;#x27;は選択不可&amp;#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;selectの要素に連番をつけたメニューとPS3を出力する。
上のコードの結果は以下のようになる。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;txt&quot;&gt;&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;1) up      2) down    3) left    4) right   5) quit
コマンド?1
up
コマンド?2
down
コマンド?5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;サブシェルとグループコマンド&quot;&gt;サブシェルとグループコマンド&lt;/h2&gt;&lt;p&gt;サブシェルでは別のシェルで、グループコマンドは現在のシェルで一連のコマンドを行う。
使用例は以下。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# サブシェル&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /hoge/etc
  &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; -p aaa &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; log

&lt;span class=&quot;token comment&quot;&gt;#グループコマンド&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;uname&lt;/span&gt; -a
  &lt;span class=&quot;token function&quot;&gt;date&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;who&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;関数&quot;&gt;関数&lt;/h2&gt;&lt;p&gt;基本文は以下。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

func&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;関数内で引数を用いるには、呼び出し時に以下のようにする。[&lt;a href=&quot;https://qiita.com/kaw/items/034bc4221c4526fe8866&quot;&gt;3&lt;/a&gt;]&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function-name function&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

func &lt;span class=&quot;token string&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;配列&quot;&gt;配列&lt;/h2&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;array&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${array&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;3&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# three&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;array2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;one two three&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${array2&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;@&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# one two three&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;unset&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;array2[1]&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${array2&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;@&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# one three&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;関数の最初の{の後にはスペースか改行が必要。
&lt;code class=&quot;language-text&quot;&gt;func(){ echo Hello;}&lt;/code&gt;&lt;/p&gt;&lt;h2 id=&quot;算術式の評価と条件式の評価&quot;&gt;算術式の評価(())と条件式の評価[[]]&lt;/h2&gt;&lt;p&gt;bashにて実装された機能。&lt;br/&gt;
算術式の評価では中にC言語Likeな算術を書ける。
条件式の評価では&lt;code class=&quot;language-text&quot;&gt;&amp;lt;&amp;gt;,(),&amp;amp;&amp;amp;,||&lt;/code&gt;をクォートする必要がない。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;((&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;))&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; a -a b &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; b &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; a -o b &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; b &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;testコマンドとの違い[&lt;a href=&quot;https://qiita.com/kiyodori/items/e9fabcba03fc1e76dbdd&quot;&gt;2&lt;/a&gt;]&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;条件式&lt;/th&gt;&lt;th&gt;test&lt;/th&gt;&lt;th&gt;[[]]&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;AND&lt;/td&gt;&lt;td&gt;a -a b&lt;/td&gt;&lt;td&gt;a &amp;amp;&amp;amp; b&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OR&lt;/td&gt;&lt;td&gt;a -o b&lt;/td&gt;&lt;td&gt;a&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;文字列比較&lt;/td&gt;&lt;td&gt;文字列a == 文字列b&lt;/td&gt;&lt;td&gt;文字列a == パターンb&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;シェル変数の代入と参照&quot;&gt;シェル変数の代入と参照&lt;/h2&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;#x27;hello world&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$a&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${a}&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;シングルクォートとダブルクォートの使い分けに気をつける。シングルなら展開無しでそのまま代入される。&lt;/p&gt;&lt;h2 id=&quot;位置パラメータ&quot;&gt;位置パラメータ&lt;/h2&gt;&lt;p&gt;シェルスクリプトのの引数を参照できる。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ./aaa.sh a b c d
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# a&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;$0&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# ./aaa.sh&lt;/span&gt;

&lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${10}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Oct&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;特殊パラメータ&quot;&gt;特殊パラメータ&lt;/h2&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;パラメータ&lt;/th&gt;&lt;th&gt;内容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;$0&lt;/td&gt;&lt;td&gt;起動されたシェルスクリプト名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$1~9&lt;/td&gt;&lt;td&gt;それぞれの引数(arg1~9)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$@&lt;/td&gt;&lt;td&gt;引数全てのリスト&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$*&lt;/td&gt;&lt;td&gt;引数全てを連結して参照する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$#&lt;/td&gt;&lt;td&gt;引数の数を表示する($0は含まれない)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$?&lt;/td&gt;&lt;td&gt;終了コードを参照する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$!&lt;/td&gt;&lt;td&gt;最後にバックグラウンドで実行したプロセスID&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\$$&lt;/td&gt;&lt;td&gt;シェル自身のプロセスID&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$-&lt;/td&gt;&lt;td&gt;現在のシェルのオプションフラグ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$_&lt;/td&gt;&lt;td&gt;直前に実行したコマンドの最後の引数&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;パラメータ展開&quot;&gt;パラメータ展開&lt;/h2&gt;&lt;h3 id=&quot;パラメータのデフォルト値&quot;&gt;パラメータのデフォルト値&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${1&lt;span class=&quot;token operator&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;tmp}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${1-&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;tmp}&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上の例の場合は引数1が設定されていないか、空文字のときに&lt;code class=&quot;language-text&quot;&gt;/tmp&lt;/code&gt;が展開され、下の場合には設定されてない場合のみ&lt;code class=&quot;language-text&quot;&gt;/tmp&lt;/code&gt;が展開される。
空文字を無視するかしないかで判断する。&lt;/p&gt;&lt;h3 id=&quot;パラメータへデフォルト値を代入&quot;&gt;パラメータへデフォルト値を代入&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${DIST&lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;tmp}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${DIST=&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;tmp}&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前述のものと違い、代入してから展開する。&lt;/p&gt;&lt;h3 id=&quot;パラメータ未設定時にエラーを出力&quot;&gt;パラメータ未設定時にエラーを出力&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${1&lt;span class=&quot;token operator&quot;&gt;:?&lt;/span&gt;error&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;}&lt;/span&gt;&amp;quot;&lt;/span&gt; ./
&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${1?error&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;}&lt;/span&gt;&amp;quot;&lt;/span&gt; ./&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;パラメータが設定されていなければ、?の後に記述したメッセージが表示されてスクリプトが終了する。&lt;/p&gt;&lt;h3 id=&quot;パラメータの長さ&quot;&gt;パラメータの長さ&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;${&lt;span class=&quot;token operator&quot;&gt;#&lt;/span&gt;test}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;パラメータの文字列の長さを返す。&lt;br/&gt;
スクリプトで使わなくても、コマンド&lt;code class=&quot;language-text&quot;&gt;cat text | wc -c&lt;/code&gt;でも代用できる。&lt;/p&gt;&lt;h3 id=&quot;パラメータからパターンを削除&quot;&gt;パラメータからパターンを削除&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${DIR&lt;span class=&quot;token operator&quot;&gt;#&lt;/span&gt;*&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${DIR&lt;span class=&quot;token operator&quot;&gt;##&lt;/span&gt;*&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;}&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;${パラメータ#パターン}&lt;/code&gt;のように使う。#が1つだと最短の部分が、#が2つだと最長の部分が左から取り除かれる。&lt;/p&gt;&lt;p&gt;#を%に変更すると右側から取り除かれる。&lt;/p&gt;&lt;h3 id=&quot;文字列の一部を抜粋&quot;&gt;文字列の一部を抜粋&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;${パラメータ&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;オフセット&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;長さ}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;オフセットで戦闘から何文字削除するか、長さで削除した文字列のうち先頭の何文字を表示するか決定する。&lt;/p&gt;&lt;h3 id=&quot;パラメータの置換&quot;&gt;パラメータの置換&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;${パラメータ&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;パターン&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;置換文字列}&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;${パラメータ&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;パターン&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;置換文字列}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt;が1つだと先頭の1つを置換する。2つだと全て置換する。&lt;/p&gt;&lt;h2 id=&quot;文字列の囲み方&quot;&gt;文字列の囲み方&lt;/h2&gt;&lt;p&gt;シングルクォート&lt;code class=&quot;language-text&quot;&gt;&amp;#x27; &amp;#x27;&lt;/code&gt;では文字列がそのまま表示される。ダブルクオート&lt;code class=&quot;language-text&quot;&gt;&amp;quot; &amp;quot;&lt;/code&gt;ではパラメータ展開とコマンド置換が行われる。
バッククォート&lt;code class=&quot;language-text&quot;&gt;` `&lt;/code&gt;では囲んだ部分でのコマンドの標準入力で置換が行われる。&lt;code class=&quot;language-text&quot;&gt;$( )&lt;/code&gt;はバッククォートと同じことを書き方を変えて行える。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;${a}&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# ${a}&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;${a}&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# hello&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# /home/user&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# /home/user&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;リダイレクト&quot;&gt;リダイレクト&lt;/h2&gt;&lt;h3 id=&quot;入力&quot;&gt;入力&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;出力&quot;&gt;出力&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;Hello World&amp;#x27;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;追記&quot;&gt;追記&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;エラー出力&quot;&gt;エラー出力&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -rf non-exist &lt;span class=&quot;token operator&quot;&gt;&lt;span class=&quot;token file-descriptor important&quot;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; /dev/null &lt;span class=&quot;token comment&quot;&gt;# エラーメッセージを出さずに削除&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;ヒアドキュメント&quot;&gt;ヒアドキュメント&lt;/h3&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;EOF&amp;#x27;
abcde
abcde
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;終了文字列(上記だとEOF)がシングルクォートされてると変数展開等は行われない。&lt;/p&gt;&lt;h3 id=&quot;ヒアストリング&quot;&gt;ヒアストリング&lt;/h3&gt;&lt;p&gt;基本的にはヒアストリングと一緒。終了文字列を書かなくて良い。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;abcde
abcde&amp;#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;よく使うコマンド&quot;&gt;よく使うコマンド&lt;/h2&gt;&lt;h3 id=&quot;expr&quot;&gt;expr&lt;/h3&gt;&lt;p&gt;数値計算を行う。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; + &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;basename&quot;&gt;basename&lt;/h3&gt;&lt;p&gt;ファイル名のみを出力する。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;basename&lt;/span&gt; /home/user/test.txt
&lt;span class=&quot;token comment&quot;&gt;# test.txt&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;basename&lt;/span&gt; /home/user/test.txt .txt
&lt;span class=&quot;token comment&quot;&gt;# test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;dirname&quot;&gt;dirname&lt;/h3&gt;&lt;p&gt;ディレクトリ名を表示する。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;dirname&lt;/span&gt; /home/user/test.txt
&lt;span class=&quot;token comment&quot;&gt;# /home/user&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;dirname&lt;/span&gt; test.txt
&lt;span class=&quot;token comment&quot;&gt;# .&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;wc&quot;&gt;wc&lt;/h3&gt;&lt;p&gt;ファイルの行数、文字数、サイズを表示できる。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; -lwc test.txt
&lt;span class=&quot;token comment&quot;&gt;# row&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# words&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# size&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;sed&quot;&gt;sed&lt;/h3&gt;&lt;p&gt;ファイルの中の文字列を置き換える。&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;aaaaccccaaaa&amp;#x27;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; old.txt

&lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;s/aaaa/b/&amp;#x27;&lt;/span&gt; old.txt
&lt;span class=&quot;token comment&quot;&gt;# bccccaaaa&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;#x27;s/aaaa/b/g&amp;#x27;&lt;/span&gt; old.txt
&lt;span class=&quot;token comment&quot;&gt;# bccccb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;&lt;h3 id=&quot;文献&quot;&gt;文献&lt;/h3&gt;&lt;p&gt;[1]: &lt;a href=&quot;https://qiita.com/nafuka/items/c97bfd2a4ca26e70e722&quot;&gt;https://qiita.com/nafuka/items/c97bfd2a4ca26e70e722&lt;/a&gt;  &lt;/p&gt;&lt;p&gt;[2]: &lt;a href=&quot;https://qiita.com/kiyodori/items/e9fabcba03fc1e76dbdd&quot;&gt;https://qiita.com/kiyodori/items/e9fabcba03fc1e76dbdd&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[3]: &lt;a href=&quot;https://qiita.com/kaw/items/034bc4221c4526fe8866&quot;&gt;https://qiita.com/kaw/items/034bc4221c4526fe8866&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;書籍&quot;&gt;書籍&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://amzn.to/3vkzkgM&quot;&gt;[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB+DB PRESS plus)&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[First Post]]></title><description><![CDATA[ブログ、はじめました こんにちは。はじめまして。
本サイトは、僕のノートとして情報系に関して学んだことを書いていきたいと思います。 よろしくお願いします。 サイトを構成する技術 本サイトはReact製の静的サイトジェネレーターであるGatsby.js…]]></description><link>https://note.mjunya.com/posts/2021-05-18-first-post/</link><guid isPermaLink="false">https://note.mjunya.com/posts/2021-05-18-first-post/</guid><pubDate>Tue, 18 May 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;ブログはじめました&quot;&gt;ブログ、はじめました&lt;/h2&gt;&lt;p&gt;こんにちは。はじめまして。
本サイトは、僕のノートとして情報系に関して学んだことを書いていきたいと思います。&lt;br/&gt;
よろしくお願いします。&lt;/p&gt;&lt;h2 id=&quot;サイトを構成する技術&quot;&gt;サイトを構成する技術&lt;/h2&gt;&lt;p&gt;本サイトはReact製の静的サイトジェネレーターであるGatsby.jsを用いてサイト構築を行っています。&lt;br/&gt;
生成した静的ファイルはGithub Pagesで管理しています。&lt;/p&gt;&lt;h2 id=&quot;注意&quot;&gt;注意&lt;/h2&gt;&lt;p&gt;本サイトには誤りや、浅い知識が含まれる場合があります。
可能な限り正しい知識を掲載しようと考えていますが、ご容赦願います。&lt;/p&gt;</content:encoded></item></channel></rss>