---
import { ViewTransitions } from "astro:transitions";

const { title, description } = Astro.props;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="apple-touch-icon" sizes="1024x1024" href="/icon.png" />

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<meta property="og:title" content={title} />
<meta property="og:locale" content="ja_JP" />
<meta property="og:image" content="/ogp_image_square.png" />
<meta property="og:description" content={description} />
<meta property="og:type" content="article" />

<meta name="twitter:card" content="summary" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content="/ogp_image_square.png" />

<ViewTransitions />

<meta name="generator" content={Astro.generator} />

<script
  type="text/partytown"
  src="https://www.googletagmanager.com/gtag/js?id=GTM-N3DMFDC"></script>
<script type="text/partytown">
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());

  gtag("config", "GTM-N3DMFDC");
</script>

<!-- This is intentionally inlined to avoid FOUC -->
<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (
    theme === "dark" ||
    (!theme && window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    document.documentElement.classList.remove("light");
  } else {
    document.documentElement.classList.add("light");
  }

  window.localStorage.setItem("theme", theme);
</script>
