---
import ThemeToggleButton from "./ThemeToggleButton.astro";

const { siteTitle, lang = "ja" } = Astro.props;

const texts = {
  ja: {
    home: "Home",
    categories: "Categories",
    tags: "Tags",
    about: "About Me",
    feed: "Feed",
  },
  en: {
    home: "Home",
    categories: "Categories",
    tags: "Tags",
    about: "About Me",
    feed: "Feed",
  },
};

const text = texts[lang] || texts.ja;
const baseUrl = lang === "en" ? "/en" : "";
const homeUrl = lang === "en" ? "/en/" : "/";

// 言語切り替え用のURL
const currentPath = Astro.url.pathname;
const toggleLangUrl = lang === "en" 
  ? currentPath.replace(/^\/en/, "") || "/"
  : `/en${currentPath === "/" ? "" : currentPath}`;

const langToggleText = lang === "en" ? "日本語" : "English";
---

<header>
  <h1 class="siteTitle">
    <a href={homeUrl}>{siteTitle}</a>
  </h1>

  <nav>
    <ul>
      <li>
        <a href={homeUrl}>{text.home}</a>
      </li>
      <li>
        <a href={`${baseUrl}/categories/`}>{text.categories}</a>
      </li>
      <li>
        <a href={`${baseUrl}/tags/`}>{text.tags}</a>
      </li>
      <li>
        <a href={`${baseUrl}/about/`}>{text.about}</a>
      </li>
      <li>
        <a href={`${baseUrl}/rss.xml`}>{text.feed}</a>
      </li>
      <li>
        <ThemeToggleButton />
      </li>
      <li>
        <a href={toggleLangUrl} class="lang-toggle">
          {langToggleText}
        </a>
      </li>
    </ul>
  </nav>
</header>

<style lang="scss">
  header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: calc($side-padding/4) $side-padding;
    color: var(--accent-color);
    font-family: $english-font;
    font-display: swap;
  }

  h1.siteTitle {
    border: solid 1px var(--accent-color);
    padding: 0.5rem;
    margin-top: 0.5rem;
    margin-bottom: 0;
    font-weight: 200;
    font-size: 1.5rem;
    word-break: normal;
    a,
    a:visited {
      color: var(--accent-color);
      font-family: $english-font;
      text-decoration: none;
    }
  }

  .description {
    margin-top: 0.5rem;
    margin-bottom: 0;
    margin-left: 2rem;
    color: var(--text-color);
  }

  nav {
    margin-left: auto;
    margin-top: auto;
    ul {
      list-style: none;
      text-align: right;
      li {
        display: inline-block;
      }
    }

    a,
    a:visited {
      color: var(--text-color);
      margin: 0.5rem;
      text-decoration: none;
      text-transform: uppercase;
      font-size: 0.8rem;
      font-weight: 500;
      letter-spacing: 0.05em;
    }

    .lang-toggle {
      background: transparent;
      border: 1px solid var(--accent-color);
      color: var(--accent-color) !important;
      padding: 0.3rem 0.6rem;
      border-radius: 12px;
      font-family: $english-font;
      font-size: 0.7rem !important;
      font-weight: 600;
      text-transform: none !important;
      letter-spacing: 0.02em !important;
      transition: all 0.2s ease;
      
      &:hover {
        background: var(--accent-color);
        color: white !important;
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
      }
    }
  }

  @media screen and (max-width: 480px) {
    /* 480px以下に適用されるCSS（スマホ用） */
    nav {
      margin-top: 0;
      ul {
        text-align: left;
      }
      a,
      a:visited {
        font-size: 1rem;
      }
      
      .lang-toggle {
        font-size: 0.8rem !important;
        padding: 0.4rem 0.7rem;
      }
    }
  }
</style>
